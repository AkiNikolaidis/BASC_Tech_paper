{
    "collab_server" : "",
    "contents" : "library(readr)\nlibrary(ICC)\nlibrary(ggplot2)\nlibrary(RcppCNPy)\nlibrary(psych)\nlibrary(mgc)\n\n\n#Running Discriminability\nWrite a Python Script that \n  1- Loads all subjects individualized cluster labels for Reference and for Replication.\n  2- Calculates the adjusted rand index for each pair. (60x60)\n  3- populates and outputs a csv file with all the values\n  4- outputs a subject labels file as a csv\nWrite an R script that\n  1- Loads the csv file and the subject labels files\n  2- library(mgc)\n  3- discr.stat(dat, labs) \n\nlibrary(readr,mgc,ggplot2)\n\n  #PSEUDOCODE- \n  # 1- LOOP OVER HALFMIN DISCRIMINABILITY CSV FILES, \n  # 2- LOAD FILES\n  # 3- EXTRACT BOOTSTRAP NUMBER AND RERUN\n  # 4- COMPILE DISCRIMINABILITY STATISTIC, RERUN, BOOTSTRAP, AND SCANTIME INTO DATAFRAME ROW\n  # 5- COMPLETE FOR ALL HALFMIN DATA\n  # 6- RINSE & REPEAT FOR ONEMIN THROUGH TWENTYFIVE MIN\n  \ndataFiles<- lapply(Sys.glob(\"~/Dropbox/1_Projects/1_Research/BASC_Tech/Data/testing/Discriminability*.csv\"), read.csv, header=FALSE)\nfile_names<-Sys.glob(\"~/Dropbox/1_Projects/1_Research/BASC_Tech/Data/testing/Discriminability*.csv\")\nrerun<- regmatches(file_names, regexpr(\"*_[0-9]*_rerun*\", file_names))\nrerun_num<-regmatches(rerun, regexpr(\"_*[0-9]*_\", rerun))\nbootstrap<- regmatches(file_names, regexpr(\"*_[0-9]*_bootstraps\", file_names))\nbootstrap_num<- regmatches(bootstrap, regexpr(\"_*[0-9]*_\", bootstrap))\n\ndiscrimtest<-dataFiles[1]\ndiscrimtestmat<-matrix(unlist(discrimtest), nrow=60, byrow=TRUE)\nheatmap(discrimtestmat)\ndiscrim_labels<-c(5, 6,\t0,\t8,\t12,\t16,\t13,\t3,\t10,\t25,\t29,\t20,\t14,\t11,\t17,\t19,\t1,\t4,\t18,\t15,\t9,\t28,\t2,\t26,\t21,\t22,\t24,\t23,\t27,\t7,\t5,\t6,\t0,\t8,\t12,\t16,\t13,\t3,\t10,\t25,\t29,\t20,\t14,\t11,\t17,\t19,\t1,4,\t18,\t15,\t9,\t28,\t2,\t26,\t21,\t22,\t24,\t23,\t27,\t7)\ndiscr.stat(discrimtestmat,discrim_labels)\n\n\n\n\ndat<-as.integer(read_csv('/Users/aki.nikolaidis/Downloads/foo.csv'))\nlabs<-as.integer(read_csv('/Users/aki.nikolaidis/Downloads/foo.csv'))\ndiscr.stat(dat, labs) \nDx <- as.matrix(dist(dat[sort(labs, index=TRUE)$ix,]), method='euclidian')\nplot_mtx(Dx)\n\n\nplot_mtx <- function(Dx, main.title=\"Distance Matrix\", xlab.title=\"Sample Sorted by Source\", ylab.title=\"Sample Sorted by Source\") {\n  data <- melt(Dx)\n  ggplot(data, aes(x=Var1, y=Var2, fill=value)) +\n    geom_tile() +\n    scale_fill_gradientn(name=\"dist(x, y)\",\n                         colours=c(\"#f2f0f7\", \"#cbc9e2\", \"#9e9ac8\", \"#6a51a3\"),\n                         limits=c(min(Dx), max(Dx))) +\n    xlab(xlab.title) +\n    ylab(ylab.title) +\n    theme_bw() +\n    ggtitle(main.title)\n}\n\n\n#%# 3\n\nData<- as.integer(read_csv('/Users/aki.nikolaidis/Downloads/foo.csv'))\ndf <- data.frame(matrix(unlist(Data), nrow=4331, byrow=T))\nnpmat<- npyLoad('/Users/aki.nikolaidis/PyBASC_outputs/threemintest/Run_1_800_correlation_ward_clusters-2_IndBS-2_block-1/workflow_output/basc_workflow_runner/basc/individual_group_clustered_maps/mapflow/_individual_group_clustered_maps0/ind_group_cluster_labels.npy')\n\nnpmat2<-npyLoad('/Users/aki.nikolaidis/PyBASC_outputs/threemintest/Run_1_800_correlation_ward_clusters-2_IndBS-2_block-1/workflow_output/ind_group_cluster_stability/_individual_group_clustered_maps0/ind_group_cluster_stability.npy')\n\nnpmat3<-npyLoad('/Users/aki.nikolaidis/PyBASC_outputs/threemintest/Run_1_800_correlation_ward_clusters-2_IndBS-2_block-1/workflow_output/ind_group_cluster_labels/_individual_group_clustered_maps0/ind_group_cluster_labels.npy', \n                \"integer\")\n\ntemp<-as.integer(npmat2)\n\ndata(ChickWeight)\nICCest(Chick, weight, data = ChickWeight, CI.type = \"S\")\nICCbare(Chick,weight, data=ChickWeight)\n\n## SAMPLE DISCRIMINABILITY CODE\nlibrary(mgc)\nlibrary(reshape2)\nlibrary(ggplot2)\n\nplot_mtx <- function(Dx, main.title=\"Distance Matrix\", xlab.title=\"Sample Sorted by Source\", ylab.title=\"Sample Sorted by Source\") {\n  data <- melt(Dx)\n  ggplot(data, aes(x=Var1, y=Var2, fill=value)) +\n    geom_tile() +\n    scale_fill_gradientn(name=\"dist(x, y)\",\n                         colours=c(\"#f2f0f7\", \"#cbc9e2\", \"#9e9ac8\", \"#6a51a3\"),\n                         limits=c(min(Dx), max(Dx))) +\n    xlab(xlab.title) +\n    ylab(ylab.title) +\n    theme_bw() +\n    ggtitle(main.title)\n}\n\n\nnsrc <- 5\nnobs <- 10\nd <- 20\nset.seed(12345)\nsrc_id <- array(1:nsrc)\nlabs <- sample(rep(src_id, nobs))\ndat <- t(sapply(labs, function(lab) rnorm(d, mean=lab, sd=1)))\ndiscr.stat(dat, labs)  # expect high discriminability since measurements taken at a source have the same mean and sd of only 1\n\n\n\nDx <- as.matrix(dist(dat[sort(labs, index=TRUE)$ix,]), method='euclidian')\nplot_mtx(Dx)\n\ndiscr.stat(Dx, sort(labs))\n\nDx <- as.matrix(dist(iris[sort(as.vector(iris$Species), index=TRUE)$ix,c(1,2,3,4)]))\nplot_mtx(Dx)\n\n\ndiscr.stat(iris[,c(1,2,3,4)], as.vector(iris$Species))\n\n\n",
    "created" : 1539636697712.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3583265266",
    "id" : "93C78861",
    "lastKnownWriteTime" : 1541018276,
    "last_content_update" : 1541018276588,
    "path" : "~/Dropbox/1_Projects/1_Research/BASC_Tech/Code/ICC_Disciminability.R",
    "project_path" : "ICC_Disciminability.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}